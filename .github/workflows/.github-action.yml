on:
  push:
    branches: [ "main", "develop" ]
  workflow_dispatch:

env:
  DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
  DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
  RUNNER_GITHUB_USER: ${{ secrets.RUNNER_GITHUB_USER }}
  RUNNER_GITHUB_TOKEN: ${{ secrets.RUNNER_GITHUB_TOKEN }}
  IMAGE_NAME: app-devops
  CONTAINER_NAME: app-devops
  CHART_GIT_URL: github.com/trandiepphuong/helm-cicd.git
  DOCKER_YQ_IMAGE: mikefarah/yq:4
  CHART_VALUES_FILE: values.yaml

permissions:
  contents: read

jobs:
  
  build:
    runs-on: self-hosted
    steps:
    - uses: actions/checkout@v3
    
    - name: build docker image
      run: |
        COMMIT_SHA_SHORT=`echo ${GITHUB_SHA} | cut -c1-7`
        docker build -t $DOCKER_USERNAME/$IMAGE_NAME:$COMMIT_SHA_SHORT .

  push-image:
    runs-on: self-hosted
    needs: build
    steps:
    - name: push docker image
      run: |
        COMMIT_SHA_SHORT=`echo ${GITHUB_SHA} | cut -c1-7`
        docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD
        docker push $DOCKER_USERNAME/$IMAGE_NAME:$COMMIT_SHA_SHORT
        

  deploy:
    permissions:
      contents: none
    runs-on: self-hosted
    needs: push-image
    steps:    
    - name: run k8s
      run: |
        COMMIT_SHA_SHORT=`echo ${GITHUB_SHA} | cut -c1-7`
        git clone https://$RUNNER_GITHUB_USER:$RUNNER_GITHUB_TOKEN@$CHART_GIT_URL chart && cd chart
        docker run --rm \
        --user="root" \
        -v "${PWD}":/workspace \
        -w /workspace \
        $DOCKER_YQ_IMAGE \
        -i '.image.tag = "'$COMMIT_SHA_SHORT'"' $CHART_VALUES_FILE
        git config --global user.email "quoc9x@gmail.com" 
        git config --global user.name "quoc9x" 
        git add . 
        git commit -m "[BOT] Update image tag to $COMMIT_SHA_SHORT"
        git push
    # - name: run docker container
    #   run: |
    #     COMMIT_SHA_SHORT=`echo ${GITHUB_SHA} | cut -c1-7`
        
    #     containerId=$(docker ps -qa --filter "name=^$CONTAINER_NAME\$")
    #     if [ -n "$containerId" ]; then
    #     echo "Stop and remove existing container..."
    #     docker stop $CONTAINER_NAME | xargs docker rm
    #     fi

    #     docker rmi $DOCKER_USERNAME/$IMAGE_NAME:$COMMIT_SHA_SHORT || true
    #     docker pull $DOCKER_USERNAME/$IMAGE_NAME:$COMMIT_SHA_SHORT
 
    #     echo "Start new container..."
    #     docker run -d --name $CONTAINER_NAME -p 8080:8080 $DOCKER_USERNAME/$IMAGE_NAME:$COMMIT_SHA_SHORT
